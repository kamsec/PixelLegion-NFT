{"version":3,"sources":["utils/styles.js","components/Navbar.js","components/Footer.js","components/Main.js","utils/theme.js","hooks/ReadContractOnce.js","hooks/GetConnectConstants.js","pages/home.js","pages/get.js","hooks/WriteContract.js","pages/all.js","hooks/ReadContractMany.js","pages/support.js","App.js","reportWebVitals.js","index.js"],"names":["useStyles","makeStyles","theme","footer","background","palette","primary","main","height","color","centeredText","textAlign","centered","display","justifyContent","alignItems","textPurple","fontWeight","textWhite","image","verticalAlign","paddingRight","marginBottom","unorderedList","responsiveImage","width","spinner","transform","animation","animationDirection","responsiveImageShake","linkColor","gridAllImages","breakpoints","down","marginLeft","tenColumnsSpacer","up","backgroundColor","fiveColumnsSpacer","displayedContractAddress","fontSize","Navbar","classes","spacer","flex","side","offset","mixins","toolbar","connectButton","whiteSpace","minWidth","maxHeight","marginTop","borderRadius","disconnectButton","connectButtonWide","disconnectButtonWide","menuPaper","useStylesNavbar","mainClasses","useEthers","account","activateBrowserWallet","deactivate","isConnected","undefined","useState","value","setValue","handleClickTab","event","newValue","anchor","setAnchor","useTheme","isMobile","useMediaQuery","closeMenu","open","Boolean","location","useLocation","pathname","useEffect","AppBar","Toolbar","className","Button","disableRipple","variant","onClick","style","to","src","alt","borderLeft","secondary","href","config","paddingTop","marginRight","IconButton","menuButton","edge","aria-label","currentTarget","Menu","id","anchorEl","anchorOrigin","vertical","horizontal","keepMounted","transformOrigin","onClose","paper","MenuItem","component","Link","Typography","Tabs","indicatorColor","Tab","label","Footer","position","bottom","top","text","useStylesFooter","Main","rel","createTheme","type","typography","ReadContractOnce","address","abi","method","args","useContractCall","GetConnectConstants","chainId","networkName","ChainId","CHAIN_NAMES","isCorrectChain","contractAddress","PixelLegionMarket","contractInterface","utils","Interface","Home","tokenLimit","parseInt","tokensLeft","gutterBottom","Box","bgcolor","p","sx","maxWidth","borderBottom","Get","mintedToken","setMintedToken","gasPrice","useGasPrice","Math","round","claimPrice","claimPriceInMatic","myContract","Contract","useContractFunction","txSend","send","tx","gasLimit","txState","state","txEvents","events","WriteContract","toString","isMining","status","handleMint","name","mt","Alert","icon","severity","disabled","minHeight","CircularProgress","size","align","textTransform","All","totalSupply","zeroToHundredArr","Array","from","keys","contractCalls","_i","push","calls","responseTokenByIndex","useContractCalls","tokenIds","map","item","Grid","container","_","index","xs","sm","md","lg","includes","loading","opacity","Support","paragraph","dappConfig","supportedChains","readOnlyChainId","readOnlyUrls","App","basename","DAppProvider","ThemeProvider","paddingBottom","Container","exact","path","element","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.f637103e.chunk.js","sourcesContent":["import { makeStyles } from '@material-ui/core'\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    footer:{\r\n        background: theme.palette.primary.main,\r\n        height: '100px',\r\n        color: \"white\",\r\n    },\r\n    centeredText: {\r\n        textAlign: \"center\",\r\n    },\r\n    centered: {\r\n      display: \"flex\",\r\n      justifyContent: \"center\",\r\n      alignItems: \"center\",\r\n    },\r\n    textPurple: {\r\n        color: \"#8247e5\",\r\n        fontWeight: \"bold\",\r\n    },\r\n    textWhite: {\r\n        color: \"white\",\r\n        fontWeight: \"bold\",\r\n    },\r\n    image:{\r\n        verticalAlign: \"middle\",\r\n        paddingRight: \"8px\",\r\n        marginBottom: \"2px\"\r\n    },\r\n    unorderedList:{\r\n      display: \"inline-block\",\r\n      textAlign: \"left\",\r\n    },\r\n    responsiveImage:{\r\n      width: \"100%\",\r\n      height: \"auto\"\r\n    },\r\n    spinner:{\r\n      transform: \"rotateY(40deg)\",\r\n      animation: \"two 2s infinite\",\r\n      animationDirection: \"alternate\",\r\n    },\r\n    responsiveImageShake: {\r\n      '&:hover': {\r\n        animation: 'shake 0.3s infinite'\r\n      }\r\n    },\r\n    linkColor: {\r\n     '&:link': {\r\n      color: \"#551a8b\",\r\n      }\r\n    },\r\n    gridAllImages: {\r\n      justifyContent: \"center\",\r\n      [theme.breakpoints.down('xs')]: {marginLeft: \"-5%\"}, // fix - for some reason on xs theres space here\r\n    },\r\n    tenColumnsSpacer: {\r\n      [theme.breakpoints.up('md')]: {width: \"100%\",\r\n      backgroundColor: 'red'}, // colors just to make it easy to notice if something works wrong\r\n      [theme.breakpoints.down('sm')]: {width: \"0%\",\r\n      backgroundColor: 'green'},\r\n    },\r\n    fiveColumnsSpacer: {\r\n      [theme.breakpoints.up('md')]: {width: \"0%\",\r\n      backgroundColor: 'red'},\r\n      [theme.breakpoints.down('sm')]: {width: \"100%\",\r\n      backgroundColor: 'green'},\r\n    },\r\n    displayedContractAddress: {\r\n      [theme.breakpoints.up('md')]: {fontSize: \"1.25rem\"},\r\n      [theme.breakpoints.down('sm')]: {fontSize: \"0.85rem\"},\r\n    }\r\n  }))\r\n\r\nexport default useStyles\r\n\r\n","import React, { useState, useEffect } from 'react'\r\nimport { AppBar, Typography, Tab, Tabs, Toolbar, Button,\r\n     makeStyles, useMediaQuery, useTheme, IconButton, Menu, MenuItem, } from '@material-ui/core'\r\nimport { useEthers } from \"@usedapp/core\"\r\nimport { Link, useLocation } from 'react-router-dom'\r\nimport MenuIcon from \"@material-ui/icons/Menu\"\r\nimport useStyles from '../utils/styles'\r\nimport config from \"../config.json\"\r\n\r\nexport const Navbar = () => {\r\n    const useStylesNavbar = makeStyles((theme) => ({\r\n        spacer: {\r\n            flex: '1 1 100%',\r\n        },\r\n        side: {\r\n            flex: '0 0 auto',\r\n        },\r\n        offset: theme.mixins.toolbar,\r\n        connectButton: {\r\n            whiteSpace: \"nowrap\",\r\n            minWidth: '150px',\r\n            maxHeight: '37px',\r\n            marginTop: '5px',\r\n            borderRadius: \"30px\",\r\n        },\r\n        disconnectButton: {\r\n            whiteSpace: \"nowrap\",\r\n            minWidth: '150px',\r\n            maxHeight: '37px',\r\n            marginTop: '5px',\r\n            borderRadius: \"30px\",\r\n        },\r\n        connectButtonWide: {\r\n            whiteSpace: \"nowrap\",\r\n            minWidth: '90%',\r\n            maxHeight: '37px',\r\n            marginTop: '5px',\r\n            borderRadius: \"30px\",\r\n        },\r\n        disconnectButtonWide: {\r\n            whiteSpace: \"nowrap\",\r\n            minWidth: '90%',\r\n            maxHeight: '37px',\r\n            marginTop: '5px',\r\n            borderRadius: \"30px\",\r\n        },\r\n        menuPaper: {\r\n            backgroundColor: theme.palette.primary.main\r\n        }\r\n    }))\r\n    const classes = useStylesNavbar()\r\n    const mainClasses = useStyles()\r\n    const { account, activateBrowserWallet, deactivate } = useEthers()\r\n    const isConnected = ((account !== undefined) && (account !== null)) \r\n\r\n    const [value, setValue] = useState(0);\r\n    const handleClickTab = (event, newValue) => {\r\n        setValue(newValue)\r\n    }\r\n\r\n    const [anchor, setAnchor] = useState(null);\r\n    const theme = useTheme()\r\n    const isMobile = useMediaQuery(theme.breakpoints.down(\"sm\"))\r\n    const openMenu = (event) => {\r\n        setAnchor(event.currentTarget)\r\n      }\r\n    const closeMenu = () => {\r\n        setAnchor(null);\r\n      };\r\n    const open = Boolean(anchor)\r\n\r\n    // handling navigation bar switch effect - this way works also if i change pages through other components buttons\r\n    const location = useLocation().pathname;\r\n    useEffect(() => {\r\n        if (location === '/') {\r\n            handleClickTab(null, 0)\r\n        } else if (location === '/get') {\r\n            handleClickTab(null, 1)\r\n        } else if (location === '/all') {\r\n            handleClickTab(null, 2)\r\n        } else if (location === '/support') {\r\n            handleClickTab(null, 3)\r\n        }\r\n      }, [location])\r\n\r\n    return (\r\n        <>\r\n            <AppBar color=\"primary\">\r\n                {isMobile ? (\r\n                    <Toolbar className={mainClasses.centered}>\r\n                        {isConnected ? (\r\n                            <Button disableRipple color=\"secondary\" variant=\"contained\"  className={classes.disconnectButtonWide}\r\n                                onClick={() => deactivate()}>\r\n                                Disconnect\r\n                            </Button>\r\n                        ) : (\r\n                            <Button disableRipple color=\"secondary\" variant=\"contained\" className={classes.connectButtonWide}\r\n                                onClick={() => activateBrowserWallet()}>\r\n                                Connect Wallet\r\n                            </Button>\r\n                        )}\r\n                    </Toolbar>\r\n                ) : null}\r\n                <Toolbar>\r\n                    <div className={classes.side} style={{display: \"flex\", alignItems: \"center\"}}>\r\n                        <Link to=\"/\" style={{paddingRight: \"10px\"}}>\r\n                            <img src=\"logo.png\" className={ mainClasses.responsiveImageShake } alt=\"logo\"/>\r\n                        </Link>\r\n                        <span style={{borderLeft: `2px solid ${theme.palette.secondary.main}`}}><p></p></span>\r\n                        <a href={config[\"discordUrl\"]} style={{ marginLeft: \"20px\"}}>\r\n                            <img src=\"discord-icon.svg\" alt=\"\" style={{width: \"25px\", paddingTop: \"7px\"}}/>\r\n                        </a>\r\n                        <a href={config[\"twitterUrl\"]} style={{ marginLeft: \"15px\"}}>\r\n                            <img src=\"twitter-icon.svg\" alt=\"\" style={{width: \"25px\", paddingTop: \"7px\"}}/>\r\n                        </a>\r\n                        <a href={config[\"openseaCollectionUrl\"]} style={{ marginLeft: \"15px\",  marginRight: \"15px\"}}>\r\n                            <img src=\"opensea-icon.svg\" alt=\"\" style={{width: \"25px\", paddingTop: \"7px\"}}/>\r\n                        </a>\r\n                        \r\n                    </div>\r\n                    <div className={classes.spacer}></div>\r\n                    {isMobile ? (\r\n                        <>\r\n                            <div>\r\n                                <IconButton\r\n                                    //color=\"textPrimary\"\r\n                                    color=\"secondary\"\r\n                                    className={classes.menuButton}\r\n                                    edge=\"start\"\r\n                                    aria-label=\"menu\"\r\n                                    onClick={openMenu}\r\n                                > \r\n                                    <MenuIcon />\r\n                                </IconButton>\r\n                                <Menu\r\n                                    id=\"menu-appbar\"\r\n                                    anchorEl={anchor}\r\n                                    anchorOrigin={{\r\n                                    vertical: \"top\",\r\n                                    horizontal: \"right\"\r\n                                    }}\r\n                                    keepMounted\r\n                                    transformOrigin={{\r\n                                    vertical: \"top\",\r\n                                    horizontal: \"right\"\r\n                                    }}\r\n                                    open={open}\r\n                                    onClose={closeMenu}\r\n                                    classes={{ paper: classes.menuPaper }}>\r\n                                    <MenuItem onClick={closeMenu} component={Link} to=\"/\">\r\n                                        <Typography variant=\"h6\" style={{color: \"white\"}}>Home</Typography>\r\n                                    </MenuItem>\r\n                                    <MenuItem onClick={closeMenu} component={Link} to=\"/get\">\r\n                                        <Typography variant=\"h6\" style={{color: \"white\"}}>Get Your Own</Typography>\r\n                                    </MenuItem>\r\n                                    <MenuItem onClick={closeMenu} component={Link} to=\"/all\">\r\n                                        <Typography variant=\"h6\" style={{color: \"white\"}}>All Legionaries</Typography>\r\n                                    </MenuItem>\r\n                                    <MenuItem onClick={closeMenu} component={Link} to=\"/support\">\r\n                                        <Typography variant=\"h6\" style={{color: \"white\"}}>Support</Typography>\r\n                                    </MenuItem>\r\n                                </Menu>\r\n                            </div>\r\n                            \r\n                        </>\r\n                    ) : (\r\n                        <div className={classes.side}>\r\n                            <Tabs\r\n                                value={value}\r\n                                //onChange={handleClickTab}  /* no need anymore, handling this with useEffect */\r\n                                indicatorColor=\"secondary\"\r\n                                >\r\n                                <Tab disableRipple label='Home' style={{minWidth: \"140px\"}} component={Link} to=\"/\" />\r\n                                <Tab disableRipple label='Get Your Own' style={{minWidth: \"140px\"}} component={Link} to=\"/get\" />\r\n                                <Tab disableRipple label='All Legionaries' style={{minWidth: \"140px\"}} component={Link} to=\"/all\" />\r\n                                <Tab disableRipple label='Support' style={{minWidth: \"140px\"}} component={Link} to=\"/support\"/>\r\n                                {isConnected ? (\r\n                                    <Button disableRipple color=\"secondary\" variant=\"contained\"  className={classes.disconnectButton}\r\n                                        onClick={() => deactivate()}>\r\n                                        Disconnect\r\n                                    </Button>\r\n                                ) : (\r\n                                    <Button disableRipple color=\"secondary\" variant=\"contained\"  className={classes.connectButton}\r\n                                        onClick={() => activateBrowserWallet()}>\r\n                                        Connect Wallet\r\n                                    </Button>\r\n                                )}\r\n                            </Tabs>\r\n                        </div>\r\n                    )}\r\n                </Toolbar>\r\n            </AppBar>\r\n            {isMobile ? (\r\n                <>\r\n                    <div className={classes.offset} />\r\n                    <div className={classes.offset} />\r\n                </>\r\n            ) : (\r\n                <div className={classes.offset} />\r\n            )}\r\n        </>\r\n    )\r\n}\r\n\r\n\r\n","import { makeStyles } from '@material-ui/core'\r\n\r\n\r\nexport const Footer = () => {\r\n    const useStylesFooter = makeStyles((theme) => ({\r\n        footer:{\r\n            background: theme.palette.primary.main,\r\n            height: '100px',\r\n            color: \"white\",\r\n            position: \"absolute\",\r\n            bottom: 0,\r\n            width: \"100%\",\r\n        },\r\n        centered: {\r\n            position: \"relative\",\r\n            top: \"35%\",\r\n            textAlign: \"center\",\r\n        },\r\n        text: {\r\n            color: \"white\",\r\n            fontWeight: \"bold\",\r\n        },\r\n        image:{\r\n            verticalAlign: \"middle\",\r\n            paddingRight: \"8px\",\r\n            marginBottom: \"2px\"\r\n        }\r\n    }))\r\n    const classes = useStylesFooter()\r\n\r\n    return (\r\n        <div className={classes.footer}>\r\n            <div className={classes.centered}>\r\n                <a href=\"https://polygon.technology/\">\r\n                    <img src=\"matic-token-icon.svg\" width=\"23\" className={classes.image} alt=\"logo\" />\r\n                    <span className={classes.text}>Powered by Polygon</span>\r\n                </a>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n","\r\nexport const Main = () => {\r\n\r\n    return (\r\n        <div>\r\n            <link rel=\"manifest\" href=\"/manifest.json\" />\r\n        </div>\r\n    )\r\n}","import { createTheme } from '@material-ui/core'\r\n\r\nconst theme = createTheme({\r\n    palette: {\r\n        type: \"light\",\r\n        primary: {\r\n            main: '#39344d' //'#003049'\r\n        },\r\n        secondary: {\r\n            main: '#d62828' //'#cfffff'\r\n        },\r\n    },\r\n    typography: {\r\n        \"fontFamily\": `\"Poppins\", sans-serif`,\r\n        \"fontSize\": 14,\r\n        \"fontWeightLight\": 300,\r\n        \"fontWeightRegular\": 400,\r\n        \"fontWeightMedium\": 400\r\n       }\r\n})\r\n\r\nexport default theme\r\n","import { useContractCall } from \"@usedapp/core\"\r\n\r\nexport const ReadContractOnce = (address, abi, method, args) => {\r\n    const result = useContractCall({\r\n        abi: abi,\r\n        address: address,\r\n        method: method,\r\n        args: args,\r\n    })\r\n    return result\r\n}\r\n","\r\nimport { useEthers } from \"@usedapp/core\"\r\nimport { ChainId, CHAIN_NAMES } from \"@usedapp/core\"\r\nimport { utils } from \"ethers\"\r\n// this file comes from 2-smart-contract from build directory\r\nimport PixelLegionMarket from \"../chain-info/PixelLegionMarket.json\"\r\nimport config from \"../config.json\"\r\n\r\n\r\nexport const GetConnectConstants = () => {\r\n    // metamask\r\n    const { account, chainId } = useEthers()\r\n    //chainId is current chain selected by account, ChainID is dict of all chains\r\n    const networkName= chainId in ChainId ? CHAIN_NAMES[chainId] : \"Unknown chainId\"\r\n    const isConnected= ((account !== undefined) && (account !== null))\r\n    const isCorrectChain= ((config[\"deploymentChainId\"] === chainId) && isConnected ) // added && isConnected because useDapp is shit\r\n    \r\n    // contract\r\n    const contractAddress = config[\"contract\"]\r\n    const { abi } = PixelLegionMarket\r\n    const contractInterface = new utils.Interface(abi)\r\n\r\n    return {account,\r\n            chainId,\r\n            networkName,\r\n            isConnected,\r\n            isCorrectChain,\r\n            contractAddress,\r\n            abi,\r\n            contractInterface\r\n        }\r\n}\r\n","import { Typography, Button, Box } from \"@material-ui/core\"\r\nimport { ReadContractOnce } from \"../hooks/ReadContractOnce\"\r\nimport { Link } from 'react-router-dom'\r\nimport useStyles from '../utils/styles'\r\nimport { GetConnectConstants }  from '../hooks/GetConnectConstants'\r\nimport config from \"../config.json\"\r\n\r\nfunction Home() {\r\n  const classes = useStyles()\r\n  const { contractAddress, contractInterface } = GetConnectConstants()\r\n\r\n  const tokenLimit = parseInt(ReadContractOnce(contractAddress, contractInterface, \"tokenLimit\", []))\r\n  const totalSupply = parseInt(ReadContractOnce(contractAddress, contractInterface, \"totalSupply\", []))\r\n  const tokensLeft = tokenLimit - totalSupply\r\n\r\n  return (\r\n    <>\r\n      <div style={{\"marginTop\": \"25px\"}}>\r\n        <Typography variant=\"h5\" gutterBottom>PixelLegion are NFTs on the Polygon blockchain</Typography>\r\n\r\n        <img src=\"example_legionaries.png\" className={classes.responsiveImage} alt=\"IMG\" />\r\n\r\n        <div className={classes.centered}>\r\n          <a href=\"https://polygon.technology/\">\r\n              <img src=\"matic-token-icon.svg\" width=\"23\" className={classes.image} alt=\"logo\" />\r\n              <span className={classes.textPurple}>Powered by Polygon</span>\r\n          </a>\r\n        </div>\r\n\r\n        <br></br>\r\n\r\n        <div className={ classes.centered }>\r\n          <Box bgcolor=\"#39344d\" p={3} sx={{ borderRadius: '50px', maxWidth: '50%', minWidth: '220px'}}>\r\n              <Typography variant=\"h5\" gutterBottom style={{color:\"white\"}}>PixelLegion NFTs remaining\r\n              <span style={{whiteSpace: \"nowrap\"}}>\r\n                <span style={{borderBottom: \"1px solid #8247e5\", marginLeft: \"20px\"}}>{ tokensLeft }</span>\r\n                <span><small> / { tokenLimit }</small></span>\r\n              </span>\r\n              </Typography>\r\n\r\n          </Box>\r\n          </div>\r\n        <br></br>\r\n\r\n        {(tokensLeft > 0) ? (\r\n          <>\r\n            <div className={classes.centered}>\r\n              <Button variant=\"contained\" color=\"secondary\" style={{ borderRadius: \"30px\" }} component={Link} to=\"/get\">Get your own</Button>\r\n            </div>\r\n            <div className={classes.centered}>\r\n              <small>or</small>\r\n            </div>\r\n          </>\r\n        ) : (\r\n          <>\r\n            <div className={classes.centered}>\r\n              All our NFTs have been minted!<br></br>\r\n              You can still buy them from traders on OpenSea.\r\n            </div><br></br>\r\n          </>\r\n        )}\r\n\r\n        <div className={classes.centered}>\r\n          <a href={config[\"openseaCollectionUrl\"]}>\r\n            <Button variant=\"contained\" color=\"secondary\" style={{ borderRadius: \"30px\" }}>Trade on OpenSea</Button>\r\n          </a>\r\n        </div>\r\n\r\n        <br></br>\r\n\r\n        <div>\r\n          <div style={{\"marginLeft\": \"8%\"}}><b>Features:</b></div>\r\n          <div className={classes.centered}>\r\n            <ul className={classes.unorderedList}>\r\n              <li><span style={{color: 'green'}}>✓ </span>Generated algorithmically from manually crafted assets</li>\r\n              <li><span style={{color: 'green'}}>✓ </span>Each Legionary has unique set of attributes, according to defined rarity system</li>\r\n              <li><span style={{color: 'green'}}>✓ </span>The identity of each Legionary is a mystery until your purchase is completed</li>\r\n              <li><span style={{color: 'green'}}>✓ </span>Maximum supply is limited to 100 tokens</li>\r\n              <li><span style={{color: 'green'}}>✓ </span>Metadata and images stored on IPFS</li>\r\n              <li><span style={{color: 'green'}}>✓ </span>IPFS hash of each image stored on chain</li>\r\n              <li><span style={{color: 'green'}}>✓ </span>Public and verified Smart Contract code</li>\r\n            </ul>\r\n          </div>\r\n        </div>\r\n\r\n        <br></br>\r\n        <div className={classes.centered}>\r\n          <Typography variant=\"body1\" style={{color:\"gray\"}}><span>PixelLegion contract address</span></Typography>\r\n        </div>\r\n\r\n        <a href={`${config[\"blockchainScanUrl\"]}${contractAddress}`} className={classes.linkColor}>\r\n          <Typography variant=\"h6\" gutterBottom className={classes.displayedContractAddress}><span>{ contractAddress }</span></Typography>\r\n        </a>\r\n        \r\n\r\n        <br></br>\r\n\r\n      </div>\r\n        \r\n    </>\r\n  )\r\n}\r\nexport default Home;","import { Typography, Button, CircularProgress, Box } from \"@material-ui/core\";\r\nimport { ReadContractOnce } from \"../hooks/ReadContractOnce\"\r\nimport { WriteContract } from \"../hooks/WriteContract\"\r\nimport { useEffect, useState } from \"react\"\r\nimport config from \"../config.json\"\r\nimport useStyles from '../utils/styles'\r\nimport Alert from '@material-ui/lab/Alert';\r\nimport { GetConnectConstants }  from '../hooks/GetConnectConstants'\r\nimport { useGasPrice } from \"@usedapp/core\"\r\n\r\nfunction Get() {\r\n  const classes = useStyles()\r\n  const [mintedToken, setMintedToken] = useState(0);\r\n\r\n  const { account, networkName, isConnected, isCorrectChain, contractAddress, contractInterface } = GetConnectConstants()\r\n\r\n  const tokenLimit = parseInt(ReadContractOnce(contractAddress, contractInterface, \"tokenLimit\", []))\r\n  const totalSupply = parseInt(ReadContractOnce(contractAddress, contractInterface, \"totalSupply\", []))\r\n  const tokensLeft = tokenLimit - totalSupply\r\n\r\n  var gasPrice = parseInt(useGasPrice())\r\n  gasPrice = Math.round(gasPrice * 1.05)\r\n\r\n  const claimPrice = parseInt(ReadContractOnce(contractAddress, contractInterface, \"claimPrice\", []))\r\n  const claimPriceInMatic = claimPrice / 10 ** 18 // as displayed value only\r\n  const {tx, txState, txEvents} = WriteContract(contractAddress, contractInterface, \"mint\", claimPrice.toString(), gasPrice.toString())\r\n\r\n  const isMining = txState.status === \"Mining\"\r\n\r\n  const handleMint = () => {\r\n    return tx()\r\n  }\r\n  \r\n  // sets minted token\r\n  useEffect(() => {\r\n    if (txEvents) {\r\n      if (txEvents[1].name === \"Assign\") {\r\n        setMintedToken(parseInt(txEvents[1].args[1]))\r\n      }\r\n    }\r\n  }, [txEvents]) // it tracks this array, if anything in this array changes, it will start function in useEffect\r\n\r\n\r\n  return (\r\n    <>\r\n      {(tokensLeft === 0 && !mintedToken) ? (  \r\n        // && !mintedToken added to work properly when last token is minted\r\n        <Box p={2} mt={2}>\r\n          <div className={classes.centeredText}>\r\n            All our NFTs have been minted!<br></br>\r\n            You can still buy them from traders on OpenSea.<br></br><br></br>\r\n            <a href={config[\"openseaCollectionUrl\"]}>\r\n              <Button variant=\"contained\" color=\"secondary\" style={{ borderRadius: \"30px\" }}>Trade on OpenSea</Button>\r\n            </a>\r\n          </div>\r\n        </Box>\r\n      ) : (\r\n        <>\r\n          {(isConnected && isCorrectChain) ? (\r\n            <>\r\n              <Box p={2} mt={2}>\r\n                <Typography variant=\"h5\" gutterBottom>Mint your own PixelLegion NFT! </Typography>\r\n                <div className={ classes.centered } style={{textAlign: 'center'}}>\r\n                  {mintedToken ? (\r\n                    <Box>\r\n                      <a href={`${config[\"openseaAssetUrl\"]}/${mintedToken}`} className={classes.linkColor}>\r\n                        <img src={`output_hashless/hashless_PixelLegion ${mintedToken}.png`} className={ classes.responsiveImage } alt=\"IMG\" style={{ maxWidth: \"350px\"}}/>\r\n                        <div style={{width: \"350\", height: \"0px\", display: \"flex\", justifyContent: \"center\"}}>\r\n                            <span style={{position: \"relative\", top: \"-30px\"}}>PixelLegion #{mintedToken}</span>\r\n                        </div>\r\n                      </a>\r\n    \r\n                      <div className={ classes.centered } style={{marginBottom: \"10px\"}}>\r\n                        <Alert mt={2} icon={false} severity=\"success\" style={{ width: \"350px\", justifyContent: \"center\"}}>Successfully minted!</Alert>\r\n                      </div>\r\n                      {(tokensLeft === 0) ? (\r\n                        <div className={ classes.centered }>\r\n                          <Button disabled={true} variant=\"contained\" className = { classes.responsiveImageShake } color=\"secondary\"\r\n                          style={{ minWidth: \"150px\", minHeight: \"50px\", borderRadius: \"30px\" }} onClick={handleMint}>\r\n                            {isMining ? <CircularProgress size={26} /> : \"All NFTs has been minted!\"}\r\n                          </Button>\r\n                        </div>\r\n                      ) : (\r\n                        <div className={ classes.centered }>\r\n                          <Button variant=\"contained\" className = { classes.responsiveImageShake } color=\"secondary\"\r\n                          style={{ minWidth: \"150px\", minHeight: \"50px\", borderRadius: \"30px\" }} onClick={handleMint} disabled={isMining}>\r\n                            {isMining ? <CircularProgress size={26} /> : \"Mint next\"}\r\n                          </Button>\r\n                        </div>\r\n                      )}\r\n                      \r\n                    </Box>\r\n                  ) : (\r\n                    <Box>\r\n                      <img src=\"hidden.png\" className={ classes.responsiveImage } alt=\"IMG\" style={{ maxWidth: \"350px\"}}/>\r\n    \r\n                      <div className={ classes.centered }>\r\n                        <Button variant=\"contained\" className = { classes.responsiveImageShake } color=\"secondary\"\r\n                        style={{ minWidth: \"150px\", minHeight: \"50px\", borderRadius: \"30px\" }} onClick={handleMint} disabled={isMining}>\r\n                          {isMining ? <CircularProgress size={26} /> : \"Mint\"}\r\n                        </Button>\r\n                      </div>\r\n                    </Box>\r\n                  )}\r\n                </div>\r\n              </Box>\r\n    \r\n              <Typography variant=\"h5\">Mint price: <b>{claimPriceInMatic} MATIC</b></Typography>\r\n              <br></br>\r\n              <Typography variant=\"h6\" align=\"left\">You are logged as: <b>{ account }</b> </Typography>\r\n              <Typography variant=\"h6\" align=\"left\">Current Network: <span style={{textTransform: 'capitalize'}}><b>{ networkName }</b></span> {isCorrectChain ? (<span style={{color: 'green'}}>✓</span>) : <span style={{color: 'red'}}>✗</span>}</Typography>\r\n              <br></br>\r\n              <Typography variant=\"h6\" align=\"left\">Notes:</Typography>\r\n              <Typography variant=\"h6\" align=\"left\"> {'➢'} Minting process creates your unique random Legionary and sends to your wallet</Typography>\r\n              <Typography variant=\"h6\" align=\"left\"> {'➢'} Once your payment is validated, you will receive a token in your wallet within 5 minutes</Typography>\r\n              <Typography variant=\"h6\" align=\"left\"> {'➢'} OpenSea needs up to 20 minutes to display your newly minted NFT properly</Typography>\r\n              <Typography variant=\"h6\" align=\"left\"> {'➢'} If you want to mint several Legionaries you will have to repeat the operation</Typography>\r\n              <Typography variant=\"h6\" align=\"left\"> {'➢'} Please send only one payment at a time</Typography>\r\n              \r\n              <div className={ classes.centered } style={{minHeight: \"200px\"}}>\r\n              </div>\r\n    \r\n            </>\r\n          ) : (\r\n            <>\r\n              <Box p={3} mt={3}>\r\n                <div className={ classes.centered }> \r\n                  <img src=\"hidden.png\" className={classes.responsiveImage} style={{maxWidth: \"350px\"}} alt=\"IMG\" />\r\n                </div>\r\n                <ol>\r\n                  <li>\r\n                    <Typography align=\"left\" variant=\"h5\" gutterBottom>\r\n                      <span style={{marginRight: '10px'}}>Connect wallet to mint your own PixelLegion NFT</span>\r\n                      {isConnected ? (<span style={{color: 'green'}}>✓</span>) : (<span style={{color: 'red'}}>✗</span>)}\r\n                    </Typography>\r\n                  </li>\r\n                  <li>\r\n                    <Typography align=\"left\" variant=\"h5\" gutterBottom>\r\n                      <span style={{marginRight: '10px'}}>Select {config[\"deploymentChain\"]} network</span>\r\n                      {isCorrectChain ? (<span style={{color: 'green'}}>✓</span>) : (<span style={{color: 'red'}}>✗</span>)}\r\n                    </Typography>\r\n                  </li>\r\n                </ol> \r\n              </Box>\r\n            </>\r\n          )}\r\n        </>\r\n      )}\r\n    </>\r\n  )\r\n}\r\nexport default Get\r\n","\r\nimport { useContractFunction } from \"@usedapp/core\"\r\nimport { Contract } from \"@ethersproject/contracts\"\r\n\r\n\r\nexport const WriteContract = (address, abi, method, value, gasPrice) => {\r\n    const myContract = new Contract(address, abi)\r\n    \r\n    const {send: txSend, state: txState, events: txEvents} = useContractFunction(myContract, method)\r\n\r\n    const tx = () => {\r\n        return txSend({value: value, gasPrice: gasPrice, gasLimit:  \"500000\"}) //check ./UseGasLimit.js for explanation why 500000\r\n    }\r\n\r\n    return {tx, txState, txEvents}\r\n}\r\n","import { Typography, Box, Grid, CircularProgress } from \"@material-ui/core\"\r\nimport { ReadContractOnce } from \"../hooks/ReadContractOnce\"\r\nimport { ReadContractMany } from \"../hooks/ReadContractMany\"\r\nimport { GetConnectConstants }  from '../hooks/GetConnectConstants'\r\nimport useStyles from '../utils/styles'\r\nimport config from \"../config.json\"\r\n\r\nfunction All() {\r\n  const classes = useStyles()\r\n\r\n  const { contractAddress, contractInterface } = GetConnectConstants()\r\n\r\n  const totalSupply = parseInt(ReadContractOnce(contractAddress, contractInterface, \"totalSupply\", []))\r\n  const tokenLimit = parseInt(ReadContractOnce(contractAddress, contractInterface, \"tokenLimit\", []))\r\n  const tokensLeft = tokenLimit - totalSupply\r\n  const zeroToHundredArr = tokenLimit ? Array.from(Array(tokenLimit).keys()) : []\r\n\r\n  var contractCalls = []\r\n  for (var _i = 0; _i < totalSupply; _i++) {\r\n    contractCalls.push({address: contractAddress, abi: contractInterface, method: \"tokenByIndex\", args: [_i]})\r\n  }\r\n  const responseTokenByIndex = ReadContractMany(contractCalls)\r\n\r\n  var tokenIds = undefined\r\n  if (totalSupply === 0) {\r\n    tokenIds = []\r\n  } else {\r\n    if (responseTokenByIndex[0] !== undefined) {\r\n      tokenIds = responseTokenByIndex.map(function(item) {\r\n        return parseInt(item[0], 10);\r\n      })\r\n    }\r\n  }\r\n\r\n  \r\n\r\n  return (\r\n    <>\r\n      <Box mt={4}>\r\n        <Typography variant=\"h5\" gutterBottom> View images of already minted Legionaries</Typography>\r\n      </Box>\r\n      {(tokenIds !== undefined) ? ( // CircularProgress when tokenIds not found yet\r\n        <Grid container className={classes.gridAllImages}>\r\n          {zeroToHundredArr.map((_, index) => (\r\n            <>\r\n              {((index % 10) === 0 && index !== 0 ) ? ( // spacer for md+\r\n                <>\r\n                <Box className={classes.tenColumnsSpacer}/>\r\n                </>\r\n              ) : null}\r\n\r\n              {((index % 5) === 0 && index !== 0 ) ? ( // spacer for sm-\r\n                <>\r\n                <Box className={classes.fiveColumnsSpacer}/>\r\n                </>\r\n              ) : null}\r\n\r\n              <Grid item xs={2} sm={2} md={1} lg={1} key={index} style={{height: \"110px\", marginBottom: \"0px\"}}>\r\n                {tokenIds.includes(index) ? (\r\n                  <>\r\n                    <a href={`${config[\"openseaAssetUrl\"]}/${index}`} className={classes.linkColor}>\r\n                      <img src={`small/small_PixelLegion ${index}.png`} alt=\"IMG\" loading=\"lazy\"/>\r\n                      <div style={{width: \"100px\", height: \"0px\", display: \"flex\", justifyContent: \"center\"}}>\r\n                        <span style={{position: \"relative\", top:\"-25px\"}}><small>#{index}</small></span>\r\n                      </div>\r\n                    </a>\r\n    \r\n                  </>\r\n                ) : (\r\n                  <div style={{opacity: \"35%\"}}>\r\n                    <img src={`small_hidden.png`} alt=\"IMG\" loading=\"lazy\"/>\r\n                    <div style={{width: \"100px\", height: \"0px\", display: \"flex\", justifyContent: \"center\"}}>\r\n                      <span style={{position: \"relative\", top:\"-25px\"}}><small>#{index}</small></span>\r\n                    </div>\r\n                  </div>\r\n                )}\r\n              </Grid>\r\n            </>\r\n          ))}\r\n        </Grid>\r\n      ) : (\r\n        <Typography variant=\"h5\" gutterBottom>\r\n          <CircularProgress size={36} />\r\n        </Typography>\r\n      )}\r\n      <Box mt={2}>\r\n        <Typography variant=\"h5\" gutterBottom> You can click to view them on OpenSea </Typography>\r\n        {tokensLeft? (<Typography variant=\"h5\" gutterBottom> The hidden ones await to be minted </Typography>) : null}\r\n      </Box>\r\n      <br></br>\r\n    </>\r\n    );\r\n}\r\n\r\nexport default All;\r\n","import { useContractCalls } from \"@usedapp/core\"\r\n\r\nexport const ReadContractMany = (calls) => {\r\n    const result = useContractCalls(calls)\r\n    return result\r\n}\r\n","import { Typography, Box } from \"@material-ui/core\";\r\nimport useStyles from '../utils/styles'\r\n\r\nfunction Support() {\r\n  const classes = useStyles()\r\n  return (\r\n    <Box mt={3}>\r\n\r\n      <Typography variant=\"h6\" align=\"left\" gutterBottom><b>What is a PixelLegion?</b></Typography>\r\n      \r\n      <Typography paragraph={true} align=\"left\" gutterBottom>\r\n        PixelLegion is an unique one of a kind Non-Fungible Token (NFT) on Polygon. By minting a Legionary,\r\n        you become the proud owner of the very first PixelLegion NFT on the Polygon network. What’s more is,\r\n        there can only ever be 100 legionaries. When you decide to mint one, you will receive\r\n        a unique-one-of-a-kind Legionary with proof of ownership stored on the polygon network.\r\n        Who knows? Your very first PixelLegion NFT may be worth your first house or car!\r\n      </Typography>\r\n\r\n      <Typography variant=\"h6\" align=\"left\" gutterBottom><b>Why is PixelLegion special?</b></Typography>\r\n\r\n      <Typography paragraph={true} align=\"left\" gutterBottom>\r\n        The popular cryptopunks on the Ethereum mainnet shocked the world when rare punks sold\r\n        for over 6 million U.S dollars (<a href=\"https://techcrunch.com/2021/04/08/the-cult-of-cryptopunks/\" className={classes.linkColor}>source</a>).\r\n        To this day, even non-rare cryptopunks trade within 5 to 6 digits!\r\n        “Why?” Some people ask, as there is no tangibility to NFTs. As famed Cathie Wood <a href=\"https://www.businessinsider.com/cathie-wood-shares-outlook-nfts-bitcoin-4-top-ark-holdings-2021-3\" className={classes.linkColor}>stated</a>,\r\n        there is wonder in these digital arts as “blockchain technologies [provide] — immutability”.\r\n        There is preservation and worth stored in these cute little art pieces, and with varying rarity,\r\n        it makes sense the extremely rare ones fetch a high price.\r\n      </Typography>\r\n\r\n      <Typography paragraph={true} align=\"left\" gutterBottom>\r\n        So back to the question, why PixelLegion? Simple: Speed, Supply, and Scarcity.\r\n        Not only is Polygon extremely fast and cost efficient, but there is also a rise in demand\r\n        for NFTs that are both scarce and in demand.\r\n      </Typography>\r\n\r\n      <Typography paragraph={true} align=\"left\" gutterBottom>\r\n        Once the 100 legionaries are minted, there will never be an opportunity to get your hands on one\r\n        unless you buy one on the market.\r\n      </Typography>\r\n\r\n      <Typography variant=\"h6\" align=\"left\" gutterBottom><b>How to get a PixelLegion NFT</b></Typography>\r\n      \r\n      <Typography paragraph={true} align=\"left\" gutterBottom>\r\n      You will have to use $Matic to purchase a Legionary. Once you connect your metamask wallet\r\n      on the website and confirm the appropriate amount, approve the transaction.\r\n      </Typography>\r\n\r\n      <Typography paragraph={true} align=\"left\" gutterBottom>\r\n      <span style={{color: \"red\"}}>Caution</span>: Please double and triple check that you have $Matic on the right mainnet (Polygon Main Network).\r\n      If you use a wrapped version, your funds will be lost.\r\n      </Typography>\r\n      <Typography variant=\"h6\" align=\"left\" gutterBottom><b>How to move wrapped $Matic to the mainnet (e.g., BSC ➔ Polygon or ETH ➔ Polygon)</b></Typography>\r\n      \r\n      <Typography paragraph={true} align=\"left\" gutterBottom style={{\"word-break\": \"break-all\"}}>\r\n        <a href=\"https://docs.matic.network/docs/develop/wallets/matic-web-wallet/web-wallet-v2-guide/\" className={classes.linkColor}>\r\n        https://docs.matic.network/docs/develop/wallets/matic-web-wallet/web-wallet-v2-guide/</a>\r\n      </Typography>\r\n\r\n      <Typography variant=\"h6\" align=\"left\" gutterBottom><b>How to add the Polygon Main Network on metamask</b></Typography>\r\n\r\n      <Typography paragraph={true} align=\"left\" gutterBottom style={{\"word-break\": \"break-all\"}}>\r\n        <a href=\"https://docs.matic.network/docs/develop/metamask/config-matic/\" className={classes.linkColor}>\r\n        https://docs.matic.network/docs/develop/metamask/config-matic/</a>\r\n      </Typography>\r\n\r\n    </Box>\r\n  )\r\n}\r\nexport default Support;","import React from 'react';\r\nimport { DAppProvider } from \"@usedapp/core\"\r\nimport { BrowserRouter, Routes, Route } from \"react-router-dom\";\r\nimport { Navbar } from \"./components/Navbar\"\r\nimport { Footer } from \"./components/Footer\"\r\nimport { Main } from \"./components/Main\"\r\nimport { ThemeProvider, Container } from \"@material-ui/core\"\r\nimport theme from './utils/theme'\r\nimport Home from './pages/home'\r\nimport Get from './pages/get'\r\nimport All from './pages/all'\r\nimport Support from './pages/support'\r\nimport config from \"./config.json\"\r\n\r\nconst dappConfig = {\r\n  supportedChains: [config[\"deploymentChainId\"]],\r\n  readOnlyChainId: config[\"deploymentChainId\"],\r\n  readOnlyUrls: {\r\n    [config[\"deploymentChainId\"]]: \"https://polygon-mainnet.g.alchemy.com/v2/1LChmZFJkhlVS5gxNqzxDNgpXX60JpAm\",\r\n  },\r\n}\r\n\r\nfunction App() {\r\n  return (\r\n  <BrowserRouter basename={config[\"appBaseName\"]}>\r\n    <DAppProvider config={dappConfig}>\r\n      <ThemeProvider theme={theme}>\r\n        <Main />\r\n        <div style={{minHeight: '100vh', position: \"relative\", paddingBottom: \"100px\"}}>\r\n        <Navbar />\r\n        <Container maxWidth=\"md\">\r\n          <Routes>\r\n            <>\r\n              <Route exact path=\"/\" element={<Home />} />\r\n              <Route path=\"get/\" element={<Get />} />\r\n              <Route path=\"all/\" element={<All />} />\r\n              <Route path=\"support/\" element={<Support />} />\r\n            </>\r\n          </Routes>\r\n        </Container>\r\n        <Footer />\r\n        </div>\r\n      </ThemeProvider>\r\n    </DAppProvider>\r\n  </BrowserRouter>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}